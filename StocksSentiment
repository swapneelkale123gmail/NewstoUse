from newsapi import NewsApiClient
import spacy
from textblob import TextBlob

# Initialize NewsAPI
newsapi = NewsApiClient(api_key='dd605ff3b87d4b9ba1eb27bf35ba0d20')

# Load SpaCy English model
nlp = spacy.load('en_core_web_sm')

# Sample list of stock symbols and company names
stock_watchlist = {
    "Apple": "AAPL",
    "Google": "GOOGL",
    "Amazon": "AMZN",
    "Microsoft": "MSFT",
    "Tesla": "TSLA",
    "Meta": "META",
    "Reliance": "RELIANCE",
    "Infosys": "INFY",
    "TCS": "TCS"
}

def fetch_news(query="stock market", language="en", page_size=10):
    articles = newsapi.get_everything(q=query, language=language, page_size=page_size)
    return articles["articles"]

def extract_stocks(text):
    doc = nlp(text)
    mentioned_stocks = []
    for ent in doc.ents:
        if ent.label_ == "ORG" or ent.label_ == "PERSON":
            for company in stock_watchlist:
                if company.lower() in ent.text.lower():
                    mentioned_stocks.append((company, stock_watchlist[company]))
    return list(set(mentioned_stocks))

def analyze_sentiment(text):
    blob = TextBlob(text)
    polarity = blob.sentiment.polarity
    if polarity > 0.1:
        return "Positive"
    elif polarity < -0.1:
        return "Negative"
    else:
        return "Neutral"

def process_news():
    news = fetch_news()
    results = []
    for article in news:
        content = article.get("title", "") + " " + article.get("description", "") + " " + article.get("content", "")
        stocks = extract_stocks(content)
        sentiment = analyze_sentiment(content)
        if stocks:
            results.append({
                "headline": article["title"],
                "stocks": stocks,
                "sentiment": sentiment,
                "url": article["url"]
            })
    return results

# Run
if __name__ == "__main__":
    stock_news_analysis = process_news()
    for item in stock_news_analysis:
        print(f"\nðŸ“° {item['headline']}")
        print(f"ðŸ”— URL: {item['url']}")
        print(f"ðŸ“ˆ Stocks Mentioned: {item['stocks']}")
        print(f"ðŸ“Š Sentiment: {item['sentiment']}")
